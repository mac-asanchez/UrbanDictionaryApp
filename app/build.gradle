apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

androidExtensions {
    experimental = true
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "com.example.urbandictionaryapp"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    applicationVariants.all { variant ->
        variant.resValue "string", "app_version_name", "${defaultConfig.versionName}"
        variant.resValue "string", "app_version", "${defaultConfig.versionName} - ${variant.versionCode}"
    }

    buildTypes {
        debug {
            minifyEnabled false
            versionNameSuffix "-${gitBranch()}"
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "urbandictionaryapp.stage"
    productFlavors {
        dev {
            dimension "urbandictionaryapp.stage"
            resValue "string", "app_name", "DEV - UrbanDictionaryApp"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
            getProps("$projectDir.absolutePath/config/dev.properties").each { p ->
                buildConfigField 'String', p.key, p.value
            }
        }
        production {
            dimension "urbandictionaryapp.stage"
            resValue "string", "app_name", "UrbanDictionaryApp"
            applicationIdSuffix ""
            getProps("$projectDir.absolutePath/config/production.properties").each { p ->
                buildConfigField 'String', p.key, p.value
            }
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation "junit:junit:$jUnit"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso"
    kapt "com.android.databinding:compiler:$android_plugin_version"

    //Timber
    implementation "com.jakewharton.timber:timber:$timber"

    //RecyclerView & CardView
    implementation "com.android.support:recyclerview-v7:$recyclerview"
    implementation "com.android.support:cardview-v7:$recyclerview"
    implementation "com.android.support:gridlayout-v7:$recyclerview"
    implementation 'com.android.support:design:29.0.0'

    // ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"

    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3"

    //Retrofit
    implementation "com.squareup.okhttp3:okhttp:$okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    implementation 'com.squareup.retrofit2:converter-moshi:2.5.0'

    // Koin for Kotlin
    implementation "org.koin:koin-core:$koin"
    // Koin extended & experimental features
    implementation "org.koin:koin-core-ext:$koin"
    // AndroidX (based on koin-android)
    // Koin AndroidX Scope feature
    implementation "org.koin:koin-androidx-scope:$koin"
    // Koin AndroidX ViewModel feature
    implementation "org.koin:koin-androidx-viewmodel:$koin"

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'

    //Room
    kapt "android.arch.persistence.room:compiler:$room"
    implementation "android.arch.persistence.room:runtime:$room"
    annotationProcessor "android.arch.persistence.room:compiler:$room"

    //ExoPlayer
    implementation "com.google.android.exoplayer:exoplayer:$exoplayer"
}

static def gitBranch() {
    def branch = ""
    def proc = "git symbolic-ref -q --short HEAD".execute()
    proc.in.eachLine { line -> branch = line }
    proc.err.eachLine { line -> println line }
    proc.waitFor()
    if (branch == "") {
        branch = System.getenv('GIT_BRANCH')
    }
    if (branch == null) {
        branch = ""
    }
    def branchName = branch.replace("/", "_")
    branchName.replace("origin_", "")
}